=== Create User Account ===
Request URL: http://localhost:5000/api/user_admin/create_user
Request Method: POST
Request Body: {"username": "testuser", "password": "password123", "email": "testuser@example.com", "role": "buyer"}
Status Code: 201
Response: {
  "message": "User created successfully"
}

=== View User Accounts ===
Request URL: http://localhost:5000/api/user_admin/view_users?username=testuser
Request Method: GET
Status Code: 500
Response: <!doctype html>
<html lang=en>
  <head>
    <title>TypeError: Object of type ObjectId is not JSON serializable
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "1gVA30hnIBcZqZJnKVxJ";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>TypeError</h1>
<div class="detail">
  <p class="errormsg">TypeError: Object of type ObjectId is not JSON serializable
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2443168455344">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1498</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2443168455488">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1476</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2443168455632">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py"</cite>,
      line <em class="line">194</em>,
      in <code class="function">wrapped_function</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>
<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>
<pre class="line before"><span class="ws">        </span>if options.get(&#39;intercept_exceptions&#39;, True):</pre>
<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>
<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>
<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))
<span class="ws">                    </span>                                            ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if hasattr(app, &#39;handle_exception&#39;):</pre>
<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>
<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>
</div>

<li><div class="frame" id="frame-2443168456208">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1473</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2443168456352">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">882</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2443168456496">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py"</cite>,
      line <em class="line">194</em>,
      in <code class="function">wrapped_function</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>
<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>
<pre class="line before"><span class="ws">        </span>if options.get(&#39;intercept_exceptions&#39;, True):</pre>
<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>
<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>
<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))
<span class="ws">                    </span>                                            ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if hasattr(app, &#39;handle_exception&#39;):</pre>
<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>
<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>
</div>

<li><div class="frame" id="frame-2443168456640">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">880</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2443168456784">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">865</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2443168456928">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\controllers\user_admin.py"</cite>,
      line <em class="line">19</em>,
      in <code class="function">view_users</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span># View User Accounts</pre>
<pre class="line before"><span class="ws"></span>@bp.route(&#39;/view_users&#39;, methods=[&#39;GET&#39;])</pre>
<pre class="line before"><span class="ws"></span>def view_users():</pre>
<pre class="line before"><span class="ws">    </span>users = User.get_user_by_username(request.args.get(&#39;username&#39;))</pre>
<pre class="line current"><span class="ws">    </span>return jsonify(users), 200
<span class="ws">    </span>       ^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span># Update User Account</pre>
<pre class="line after"><span class="ws"></span>@bp.route(&#39;/update_user/&lt;username&gt;&#39;, methods=[&#39;PUT&#39;])</pre>
<pre class="line after"><span class="ws"></span>def update_user(username):</pre>
<pre class="line after"><span class="ws">    </span>data = request.json</pre></div>
</div>

<li><div class="frame" id="frame-2443168457072">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\__init__.py"</cite>,
      line <em class="line">170</em>,
      in <code class="function">jsonify</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>Added support for serializing top-level arrays. This was a</pre>
<pre class="line before"><span class="ws">        </span>security risk in ancient browsers. See :ref:`security-json`.</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>.. versionadded:: 0.2</pre>
<pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">    </span>return current_app.json.response(*args, **kwargs)  # type: ignore[return-value]
<span class="ws">    </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2443168457216">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py"</cite>,
      line <em class="line">214</em>,
      in <code class="function">response</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>dump_args.setdefault(&#34;indent&#34;, 2)</pre>
<pre class="line before"><span class="ws">        </span>else:</pre>
<pre class="line before"><span class="ws">            </span>dump_args.setdefault(&#34;separators&#34;, (&#34;,&#34;, &#34;:&#34;))</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>return self._app.response_class(</pre>
<pre class="line current"><span class="ws">            </span>f&#34;{self.dumps(obj, **dump_args)}\n&#34;, mimetype=self.mimetype
<span class="ws">            </span>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>)</pre></div>
</div>

<li><div class="frame" id="frame-2443168457648">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py"</cite>,
      line <em class="line">179</em>,
      in <code class="function">dumps</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>:param kwargs: Passed to :func:`json.dumps`.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws">        </span>kwargs.setdefault(&#34;default&#34;, self.default)</pre>
<pre class="line before"><span class="ws">        </span>kwargs.setdefault(&#34;ensure_ascii&#34;, self.ensure_ascii)</pre>
<pre class="line before"><span class="ws">        </span>kwargs.setdefault(&#34;sort_keys&#34;, self.sort_keys)</pre>
<pre class="line current"><span class="ws">        </span>return json.dumps(obj, **kwargs)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def loads(self, s: str | bytes, **kwargs: t.Any) -&gt; t.Any:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Deserialize data as JSON from a string or bytes.</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>:param s: Text or UTF-8 bytes.</pre></div>
</div>

<li><div class="frame" id="frame-2443168457792">
  <h4>File <cite class="filename">"C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\__init__.py"</cite>,
      line <em class="line">238</em>,
      in <code class="function">dumps</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>cls = JSONEncoder</pre>
<pre class="line before"><span class="ws">    </span>return cls(</pre>
<pre class="line before"><span class="ws">        </span>skipkeys=skipkeys, ensure_ascii=ensure_ascii,</pre>
<pre class="line before"><span class="ws">        </span>check_circular=check_circular, allow_nan=allow_nan, indent=indent,</pre>
<pre class="line before"><span class="ws">        </span>separators=separators, default=default, sort_keys=sort_keys,</pre>
<pre class="line current"><span class="ws">        </span>**kw).encode(obj)
<span class="ws">        </span>      ^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>_default_decoder = JSONDecoder(object_hook=None, object_pairs_hook=None)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-2443168457936">
  <h4>File <cite class="filename">"C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py"</cite>,
      line <em class="line">202</em>,
      in <code class="function">encode</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># This doesn&#39;t pass the iterator directly to &#39;&#39;.join() because the</pre>
<pre class="line before"><span class="ws">        </span># exceptions aren&#39;t as detailed.  The list call should be roughly</pre>
<pre class="line before"><span class="ws">        </span># equivalent to the PySequence_Fast that &#39;&#39;.join() would do.</pre>
<pre class="line before"><span class="ws">        </span>chunks = self.iterencode(o, _one_shot=True)</pre>
<pre class="line before"><span class="ws">        </span>if not isinstance(chunks, (list, tuple)):</pre>
<pre class="line current"><span class="ws">            </span>chunks = list(chunks)
<span class="ws">            </span>         ^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return &#39;&#39;.join(chunks)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def iterencode(self, o, _one_shot=False):</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Encode the given object and yield each string</pre>
<pre class="line after"><span class="ws">        </span>representation as available.</pre></div>
</div>

<li><div class="frame" id="frame-2443168458080">
  <h4>File <cite class="filename">"C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py"</cite>,
      line <em class="line">432</em>,
      in <code class="function">_iterencode</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># see comment for int/float in _make_iterencode</pre>
<pre class="line before"><span class="ws">            </span>yield _floatstr(o)</pre>
<pre class="line before"><span class="ws">        </span>elif isinstance(o, (list, tuple)):</pre>
<pre class="line before"><span class="ws">            </span>yield from _iterencode_list(o, _current_indent_level)</pre>
<pre class="line before"><span class="ws">        </span>elif isinstance(o, dict):</pre>
<pre class="line current"><span class="ws">            </span>yield from _iterencode_dict(o, _current_indent_level)
<span class="ws">            </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>else:</pre>
<pre class="line after"><span class="ws">            </span>if markers is not None:</pre>
<pre class="line after"><span class="ws">                </span>markerid = id(o)</pre>
<pre class="line after"><span class="ws">                </span>if markerid in markers:</pre>
<pre class="line after"><span class="ws">                    </span>raise ValueError(&#34;Circular reference detected&#34;)</pre></div>
</div>

<li><div class="frame" id="frame-2443168458224">
  <h4>File <cite class="filename">"C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py"</cite>,
      line <em class="line">406</em>,
      in <code class="function">_iterencode_dict</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                    </span>chunks = _iterencode_list(value, _current_indent_level)</pre>
<pre class="line before"><span class="ws">                </span>elif isinstance(value, dict):</pre>
<pre class="line before"><span class="ws">                    </span>chunks = _iterencode_dict(value, _current_indent_level)</pre>
<pre class="line before"><span class="ws">                </span>else:</pre>
<pre class="line before"><span class="ws">                    </span>chunks = _iterencode(value, _current_indent_level)</pre>
<pre class="line current"><span class="ws">                </span>yield from chunks
<span class="ws">                </span>^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>if newline_indent is not None:</pre>
<pre class="line after"><span class="ws">            </span>_current_indent_level -= 1</pre>
<pre class="line after"><span class="ws">            </span>yield &#39;\n&#39; + _indent * _current_indent_level</pre>
<pre class="line after"><span class="ws">        </span>yield &#39;}&#39;</pre>
<pre class="line after"><span class="ws">        </span>if markers is not None:</pre></div>
</div>

<li><div class="frame" id="frame-2443168458368">
  <h4>File <cite class="filename">"C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py"</cite>,
      line <em class="line">439</em>,
      in <code class="function">_iterencode</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>if markers is not None:</pre>
<pre class="line before"><span class="ws">                </span>markerid = id(o)</pre>
<pre class="line before"><span class="ws">                </span>if markerid in markers:</pre>
<pre class="line before"><span class="ws">                    </span>raise ValueError(&#34;Circular reference detected&#34;)</pre>
<pre class="line before"><span class="ws">                </span>markers[markerid] = o</pre>
<pre class="line current"><span class="ws">            </span>o = _default(o)
<span class="ws">            </span>    ^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>yield from _iterencode(o, _current_indent_level)</pre>
<pre class="line after"><span class="ws">            </span>if markers is not None:</pre>
<pre class="line after"><span class="ws">                </span>del markers[markerid]</pre>
<pre class="line after"><span class="ws">    </span>return _iterencode</pre></div>
</div>

<li><div class="frame" id="frame-2443168458512">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py"</cite>,
      line <em class="line">121</em>,
      in <code class="function">_default</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>return dataclasses.asdict(o)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>if hasattr(o, &#34;__html__&#34;):</pre>
<pre class="line before"><span class="ws">        </span>return str(o.__html__())</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">    </span>raise TypeError(f&#34;Object of type {type(o).__name__} is not JSON serializable&#34;)
<span class="ws">    </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>class DefaultJSONProvider(JSONProvider):</pre>
<pre class="line after"><span class="ws">    </span>&#34;&#34;&#34;Provide JSON operations using Python&#39;s built-in :mod:`json`</pre>
<pre class="line after"><span class="ws">    </span>library. Serializes the following additional data types:</pre></div>
</div>
</ul>
  <blockquote>TypeError: Object of type ObjectId is not JSON serializable
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 1476, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py&#34;, line 194, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 1473, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py&#34;, line 194, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 880, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\controllers\user_admin.py&#34;, line 19, in view_users
    return jsonify(users), 200
           ^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\__init__.py&#34;, line 170, in jsonify
    return current_app.json.response(*args, **kwargs)  # type: ignore[return-value]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py&#34;, line 214, in response
    f&#34;{self.dumps(obj, **dump_args)}\n&#34;, mimetype=self.mimetype
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py&#34;, line 179, in dumps
    return json.dumps(obj, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\__init__.py&#34;, line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File &#34;C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py&#34;, line 202, in encode
    chunks = list(chunks)
             ^^^^^^^^^^^^
  File &#34;C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py&#34;, line 432, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File &#34;C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py&#34;, line 406, in _iterencode_dict
    yield from chunks
  File &#34;C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py&#34;, line 439, in _iterencode
    o = _default(o)
        ^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py&#34;, line 121, in _default
    raise TypeError(f&#34;Object of type {type(o).__name__} is not JSON serializable&#34;)
TypeError: Object of type ObjectId is not JSON serializable
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 1476, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py", line 194, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py", line 194, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\controllers\user_admin.py", line 19, in view_users
    return jsonify(users), 200
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\__init__.py", line 170, in jsonify
    return current_app.json.response(*args, **kwargs)  # type: ignore[return-value]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py", line 214, in response
    f"{self.dumps(obj, **dump_args)}\n", mimetype=self.mimetype
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py", line 179, in dumps
    return json.dumps(obj, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py", line 202, in encode
    chunks = list(chunks)
             ^^^^^^^^^^^^
  File "C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py", line 432, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py", line 406, in _iterencode_dict
    yield from chunks
  File "C:\Users\justi\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py", line 439, in _iterencode
    o = _default(o)
        ^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\json\provider.py", line 121, in _default
    raise TypeError(f"Object of type {type(o).__name__} is not JSON serializable")
TypeError: Object of type ObjectId is not JSON serializable


-->

Error parsing response JSON: Expecting value: line 1 column 1 (char 0)

=== Update User Account ===
Request URL: http://localhost:5000/api/user_admin/update_user/testuser
Request Method: PUT
Request Body: {"email": "newemail@example.com", "role": "seller"}
Status Code: 200
Response: {
  "message": "User updated successfully"
}

=== Suspend User Account ===
Request URL: http://localhost:5000/api/user_admin/suspend_user/testuser
Request Method: PATCH
Status Code: 200
Response: {
  "message": "User suspended successfully"
}

=== Search User Accounts ===
Request URL: http://localhost:5000/api/user_admin/search_users?query=test
Request Method: GET
Status Code: 200
Response: [
  {
    "_id": "671e1df1b74f4422cc30c26b",
    "email": "test_OToOlzri@example.com",
    "password": "TestPass123",
    "role": "buyer",
    "username": "test_user_lWZEmHE0"
  },
  {
    "_id": "671e1ea771b838179e3d2bc0",
    "email": "test_2V4GGcib@example.com",
    "password": "TestPass123",
    "role": "buyer",
    "username": "test_user_sDohQfqp"
  },
  {
    "_id": "671e1f5184d197924e361f21",
    "email": "test_DevPMy5S@example.com",
    "password": "TestPass123",
    "role": "buyer",
    "username": "test_user_7jjaCTRU"
  },
  {
    "_id": "671e2dc3a188fcbe8c655e45",
    "email": "newemail@example.com",
    "password": "password123",
    "role": "seller",
    "suspended": true,
    "username": "testuser"
  },
  {
    "_id": "671e2e188cf88c0cb7a161b5",
    "email": "testuser@example.com",
    "password": "password123",
    "role": "buyer",
    "username": "testuser"
  }
]

=== Create User Profile ===
Request URL: http://localhost:5000/api/user_admin/create_profile
Request Method: POST
Request Body: {"role": "testrole", "rights": ["create", "view"]}
Status Code: 201
Response: {
  "message": "Profile created successfully"
}

=== View User Profiles ===
Request URL: http://localhost:5000/api/user_admin/view_profiles?role=testrole
Request Method: GET
Status Code: 200
Response: {
  "_id": "671e2e238cf88c0cb7a161b6",
  "rights": [
    "create",
    "view"
  ],
  "role": "testrole"
}

=== Update User Profile ===
Request URL: http://localhost:5000/api/user_admin/update_profile/testrole
Request Method: PUT
Request Body: {"rights": ["create", "view", "update"]}
Status Code: 200
Response: {
  "message": "Profile updated successfully"
}

=== Suspend User Profile ===
Request URL: http://localhost:5000/api/user_admin/suspend_profile/testrole
Request Method: PATCH
Status Code: 200
Response: {
  "message": "Profile suspended successfully"
}

=== Search User Profiles ===
Request URL: http://localhost:5000/api/user_admin/search_profiles?query=test
Request Method: GET
Status Code: 200
Response: [
  {
    "_id": "671e1df5b74f4422cc30c26c",
    "rights": [
      "updated_right1",
      "updated_right2"
    ],
    "role": "test_role_3zKOJZBG",
    "suspended": true
  },
  {
    "_id": "671e1eab71b838179e3d2bc1",
    "rights": [
      "updated_right1",
      "updated_right2"
    ],
    "role": "test_role_IIpsDo0Q",
    "suspended": true
  },
  {
    "_id": "671e1f5584d197924e361f22",
    "rights": [
      "updated_right1",
      "updated_right2"
    ],
    "role": "test_role_YgMkoxTV",
    "suspended": true
  },
  {
    "_id": "671e2e238cf88c0cb7a161b6",
    "rights": [
      "create",
      "view",
      "update"
    ],
    "role": "testrole",
    "suspended": true
  }
]

=== User Admin Login ===
Request URL: http://localhost:5000/api/user_admin/login
Request Method: POST
Request Body: {"username": "testuser", "password": "password123"}
Status Code: 401
Response: {
  "message": "Invalid credentials or account suspended"
}

=== User Admin Logout ===
Request URL: http://localhost:5000/api/user_admin/logout
Request Method: POST
Status Code: 200
Response: {
  "message": "Logout successful"
}

=== Create Used Car Listing ===
Request URL: http://localhost:5000/api/used_car_agent/create_listing
Request Method: POST
Request Body: {"make": "Toyota", "model": "Camry", "year": 2015, "price": 12000, "seller_id": "test_seller_id"}
Status Code: 201
Response: {
  "message": "Listing created successfully"
}

=== View Used Car Listings ===
Request URL: http://localhost:5000/api/used_car_agent/view_listings
Request Method: GET
Status Code: 200
Response: [
  {
    "_id": "671e1d3942c68972b30649df",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "Elantra",
    "price": 18126,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2003
  },
  {
    "_id": "671e1d3942c68972b30649e0",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Nissan",
    "model": "Altima",
    "price": 33792,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3942c68972b30649e1",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "Altima",
    "price": 8051,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2009
  },
  {
    "_id": "671e1d3942c68972b30649e2",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "Elantra",
    "price": 37568,
    "seller_id": "671e1d3742c68972b3064984",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3942c68972b30649e3",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Elantra",
    "price": 29666,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2022
  },
  {
    "_id": "671e1d3942c68972b30649e4",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Honda",
    "model": "3 Series",
    "price": 13420,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2002
  },
  {
    "_id": "671e1d3942c68972b30649e5",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Corolla",
    "price": 8551,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3942c68972b30649e6",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Mercedes",
    "model": "3 Series",
    "price": 31475,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2008
  },
  {
    "_id": "671e1d3942c68972b30649e7",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "F-150",
    "price": 39221,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3942c68972b30649e8",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "Corolla",
    "price": 17600,
    "seller_id": "671e1d3742c68972b306497b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2006
  },
  {
    "_id": "671e1d3942c68972b30649e9",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Sorento",
    "price": 14492,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3942c68972b30649ea",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "F-150",
    "price": 40723,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3942c68972b30649eb",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "BMW",
    "model": "Elantra",
    "price": 19488,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3942c68972b30649ec",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "BMW",
    "model": "Altima",
    "price": 32329,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3942c68972b30649ed",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "C-Class",
    "price": 5978,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3942c68972b30649ee",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Altima",
    "price": 16167,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2001
  },
  {
    "_id": "671e1d3942c68972b30649ef",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Altima",
    "price": 22833,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2009
  },
  {
    "_id": "671e1d3942c68972b30649f0",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Altima",
    "price": 47758,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b30649f1",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 5638,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2008
  },
  {
    "_id": "671e1d3942c68972b30649f2",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Mercedes",
    "model": "3 Series",
    "price": 15307,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2010
  },
  {
    "_id": "671e1d3942c68972b30649f3",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Kia",
    "model": "Impala",
    "price": 23574,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3942c68972b30649f4",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "C-Class",
    "price": 20145,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3942c68972b30649f5",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Nissan",
    "model": "A4",
    "price": 33276,
    "seller_id": "671e1d3742c68972b306498e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3942c68972b30649f6",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "3 Series",
    "price": 49492,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2003
  },
  {
    "_id": "671e1d3942c68972b30649f7",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Civic",
    "price": 49557,
    "seller_id": "671e1d3742c68972b3064987",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2010
  },
  {
    "_id": "671e1d3942c68972b30649f8",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Mercedes",
    "model": "A4",
    "price": 43141,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3942c68972b30649f9",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "F-150",
    "price": 12255,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2019
  },
  {
    "_id": "671e1d3942c68972b30649fa",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 12652,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3942c68972b30649fb",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Kia",
    "model": "Altima",
    "price": 13475,
    "seller_id": "671e1d3742c68972b3064988",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2014
  },
  {
    "_id": "671e1d3942c68972b30649fc",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "3 Series",
    "price": 11393,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b30649fd",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "Sorento",
    "price": 44001,
    "seller_id": "671e1d3742c68972b3064988",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2002
  },
  {
    "_id": "671e1d3942c68972b30649fe",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Honda",
    "model": "C-Class",
    "price": 30419,
    "seller_id": "671e1d3742c68972b3064984",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b30649ff",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Civic",
    "price": 8980,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3942c68972b3064a00",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "F-150",
    "price": 9594,
    "seller_id": "671e1d3742c68972b3064986",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b3064a01",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Kia",
    "model": "Elantra",
    "price": 22431,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b3064a02",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 6926,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2015
  },
  {
    "_id": "671e1d3942c68972b3064a03",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "C-Class",
    "price": 7745,
    "seller_id": "671e1d3742c68972b306498e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3942c68972b3064a04",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Nissan",
    "model": "Civic",
    "price": 32931,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2007
  },
  {
    "_id": "671e1d3942c68972b3064a05",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 38265,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3942c68972b3064a06",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Kia",
    "model": "Elantra",
    "price": 24418,
    "seller_id": "671e1d3742c68972b3064988",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2015
  },
  {
    "_id": "671e1d3942c68972b3064a07",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "BMW",
    "model": "Sorento",
    "price": 29496,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3942c68972b3064a08",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Sorento",
    "price": 15722,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3942c68972b3064a09",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Nissan",
    "model": "Altima",
    "price": 9687,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3942c68972b3064a0a",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 31159,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3942c68972b3064a0b",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "BMW",
    "model": "Sorento",
    "price": 18169,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a0c",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "C-Class",
    "price": 12991,
    "seller_id": "671e1d3742c68972b3064986",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2008
  },
  {
    "_id": "671e1d3a42c68972b3064a0d",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "C-Class",
    "price": 39423,
    "seller_id": "671e1d3742c68972b306498a",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3a42c68972b3064a0e",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Ford",
    "model": "Civic",
    "price": 20273,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3a42c68972b3064a0f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Altima",
    "price": 9192,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3a42c68972b3064a10",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Hyundai",
    "model": "F-150",
    "price": 31530,
    "seller_id": "671e1d3742c68972b3064983",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3a42c68972b3064a11",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Honda",
    "model": "Elantra",
    "price": 34441,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3a42c68972b3064a12",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "Impala",
    "price": 16844,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3a42c68972b3064a13",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Ford",
    "model": "Elantra",
    "price": 10840,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a14",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 6630,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3a42c68972b3064a15",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "Civic",
    "price": 41835,
    "seller_id": "671e1d3742c68972b306498a",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2008
  },
  {
    "_id": "671e1d3a42c68972b3064a16",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "F-150",
    "price": 13630,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2019
  },
  {
    "_id": "671e1d3a42c68972b3064a17",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "C-Class",
    "price": 16176,
    "seller_id": "671e1d3742c68972b3064984",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3a42c68972b3064a18",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Audi",
    "model": "Civic",
    "price": 13408,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3a42c68972b3064a19",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Audi",
    "model": "Civic",
    "price": 16385,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3a42c68972b3064a1a",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "3 Series",
    "price": 47840,
    "seller_id": "671e1d3742c68972b3064988",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2022
  },
  {
    "_id": "671e1d3a42c68972b3064a1b",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "A4",
    "price": 33261,
    "seller_id": "671e1d3742c68972b306498a",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2009
  },
  {
    "_id": "671e1d3a42c68972b3064a1c",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Honda",
    "model": "Civic",
    "price": 15126,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2003
  },
  {
    "_id": "671e1d3a42c68972b3064a1d",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "C-Class",
    "price": 28743,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2023
  },
  {
    "_id": "671e1d3a42c68972b3064a1e",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Chevrolet",
    "model": "C-Class",
    "price": 12277,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2003
  },
  {
    "_id": "671e1d3a42c68972b3064a1f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 18922,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a20",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Civic",
    "price": 34854,
    "seller_id": "671e1d3742c68972b306498a",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3a42c68972b3064a21",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Honda",
    "model": "3 Series",
    "price": 35819,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2023
  },
  {
    "_id": "671e1d3a42c68972b3064a22",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "Elantra",
    "price": 32603,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2006
  },
  {
    "_id": "671e1d3a42c68972b3064a23",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "Elantra",
    "price": 14212,
    "seller_id": "671e1d3742c68972b3064987",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2021
  },
  {
    "_id": "671e1d3a42c68972b3064a24",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "C-Class",
    "price": 29205,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a25",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Honda",
    "model": "Altima",
    "price": 47839,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2019
  },
  {
    "_id": "671e1d3a42c68972b3064a26",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "Altima",
    "price": 10533,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3a42c68972b3064a27",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Civic",
    "price": 41315,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2023
  },
  {
    "_id": "671e1d3a42c68972b3064a28",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Audi",
    "model": "Altima",
    "price": 44719,
    "seller_id": "671e1d3742c68972b306497b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2014
  },
  {
    "_id": "671e1d3a42c68972b3064a29",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "C-Class",
    "price": 35874,
    "seller_id": "671e1d3742c68972b306497b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3a42c68972b3064a2a",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Elantra",
    "price": 46581,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a2b",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Ford",
    "model": "C-Class",
    "price": 11892,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3a42c68972b3064a2c",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "F-150",
    "price": 38271,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3a42c68972b3064a2d",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "F-150",
    "price": 45395,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2006
  },
  {
    "_id": "671e1d3a42c68972b3064a2e",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Corolla",
    "price": 38688,
    "seller_id": "671e1d3742c68972b3064987",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3a42c68972b3064a2f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "C-Class",
    "price": 31162,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3a42c68972b3064a30",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Chevrolet",
    "model": "3 Series",
    "price": 24687,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3a42c68972b3064a31",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "A4",
    "price": 27890,
    "seller_id": "671e1d3742c68972b306497b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2021
  },
  {
    "_id": "671e1d3a42c68972b3064a32",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "A4",
    "price": 10700,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3a42c68972b3064a33",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Sorento",
    "price": 48004,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3a42c68972b3064a34",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Hyundai",
    "model": "Impala",
    "price": 29451,
    "seller_id": "671e1d3742c68972b3064984",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3a42c68972b3064a35",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "F-150",
    "price": 40313,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2010
  },
  {
    "_id": "671e1d3a42c68972b3064a36",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "C-Class",
    "price": 8633,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2019
  },
  {
    "_id": "671e1d3a42c68972b3064a37",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "F-150",
    "price": 19628,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2007
  },
  {
    "_id": "671e1d3a42c68972b3064a38",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Altima",
    "price": 5392,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a39",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "C-Class",
    "price": 39560,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3a42c68972b3064a3a",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Chevrolet",
    "model": "F-150",
    "price": 43881,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2021
  },
  {
    "_id": "671e1d3a42c68972b3064a3b",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "A4",
    "price": 20307,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2014
  },
  {
    "_id": "671e1d3a42c68972b3064a3c",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Chevrolet",
    "model": "Sorento",
    "price": 29220,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a3d",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Audi",
    "model": "Elantra",
    "price": 31649,
    "seller_id": "671e1d3742c68972b306498e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3b42c68972b3064a3e",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Kia",
    "model": "A4",
    "price": 38933,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2006
  },
  {
    "_id": "671e1d3b42c68972b3064a3f",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Toyota",
    "model": "Altima",
    "price": 17191,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3b42c68972b3064a40",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Honda",
    "model": "Civic",
    "price": 32955,
    "seller_id": "671e1d3742c68972b306498e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3b42c68972b3064a41",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 23288,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3b42c68972b3064a42",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Ford",
    "model": "Corolla",
    "price": 46497,
    "seller_id": "671e1d3742c68972b306497c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e2e318cf88c0cb7a161b7",
    "created_at": "Sun, 27 Oct 2024 12:12:33 GMT",
    "make": "Toyota",
    "model": "Camry",
    "price": 12000,
    "seller_id": "test_seller_id",
    "year": 2015
  }
]

=== Update Used Car Listing ===
Request URL: http://localhost:5000/api/used_car_agent/update_listing/671e1d3942c68972b30649df
Request Method: PUT
Request Body: {"price": 11500}
Status Code: 200
Response: {
  "message": "Listing updated successfully"
}

=== Delete Used Car Listing ===
Request URL: http://localhost:5000/api/used_car_agent/delete_listing/671e1d3942c68972b30649df
Request Method: DELETE
Status Code: 200
Response: {
  "message": "Listing deleted successfully"
}

=== Search Used Car Listings ===
Request URL: http://localhost:5000/api/used_car_agent/search_listings?query=Toyota
Request Method: GET
Status Code: 200
Response: [
  {
    "_id": "671e1d3942c68972b30649e5",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Corolla",
    "price": 8551,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3942c68972b30649e9",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Sorento",
    "price": 14492,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3942c68972b30649f7",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Civic",
    "price": 49557,
    "seller_id": "671e1d3742c68972b3064987",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2010
  },
  {
    "_id": "671e1d3942c68972b3064a0a",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 31159,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3a42c68972b3064a0f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Altima",
    "price": 9192,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3a42c68972b3064a14",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 6630,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3a42c68972b3064a1f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 18922,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a32",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "A4",
    "price": 10700,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3a42c68972b3064a33",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Sorento",
    "price": 48004,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3a42c68972b3064a37",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "F-150",
    "price": 19628,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2007
  },
  {
    "_id": "671e1d3a42c68972b3064a3b",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "A4",
    "price": 20307,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2014
  },
  {
    "_id": "671e1d3b42c68972b3064a3f",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Toyota",
    "model": "Altima",
    "price": 17191,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e2e318cf88c0cb7a161b7",
    "created_at": "Sun, 27 Oct 2024 12:12:33 GMT",
    "make": "Toyota",
    "model": "Camry",
    "price": 12000,
    "seller_id": "test_seller_id",
    "year": 2015
  }
]

=== Buyer Search for Cars ===
Request URL: http://localhost:5000/api/buyer/search_cars?query=Toyota
Request Method: GET
Status Code: 200
Response: [
  {
    "_id": "671e1d3942c68972b30649e5",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Corolla",
    "price": 8551,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3942c68972b30649e9",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Sorento",
    "price": 14492,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3942c68972b30649f7",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Civic",
    "price": 49557,
    "seller_id": "671e1d3742c68972b3064987",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2010
  },
  {
    "_id": "671e1d3942c68972b3064a0a",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 31159,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3a42c68972b3064a0f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Altima",
    "price": 9192,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3a42c68972b3064a14",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 6630,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3a42c68972b3064a1f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 18922,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a32",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "A4",
    "price": 10700,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3a42c68972b3064a33",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Sorento",
    "price": 48004,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3a42c68972b3064a37",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "F-150",
    "price": 19628,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2007
  },
  {
    "_id": "671e1d3a42c68972b3064a3b",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "A4",
    "price": 20307,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2014
  },
  {
    "_id": "671e1d3b42c68972b3064a3f",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Toyota",
    "model": "Altima",
    "price": 17191,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e2e318cf88c0cb7a161b7",
    "created_at": "Sun, 27 Oct 2024 12:12:33 GMT",
    "make": "Toyota",
    "model": "Camry",
    "price": 12000,
    "seller_id": "test_seller_id",
    "year": 2015
  }
]

=== Buyer View Listings ===
Request URL: http://localhost:5000/api/buyer/view_listings
Request Method: GET
Status Code: 200
Response: [
  {
    "_id": "671e1d3942c68972b30649df",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "Elantra",
    "price": 18126,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2003
  },
  {
    "_id": "671e1d3942c68972b30649e0",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Nissan",
    "model": "Altima",
    "price": 33792,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3942c68972b30649e1",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "Altima",
    "price": 8051,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2009
  },
  {
    "_id": "671e1d3942c68972b30649e2",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "Elantra",
    "price": 37568,
    "seller_id": "671e1d3742c68972b3064984",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3942c68972b30649e3",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Elantra",
    "price": 29666,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2022
  },
  {
    "_id": "671e1d3942c68972b30649e4",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Honda",
    "model": "3 Series",
    "price": 13420,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2002
  },
  {
    "_id": "671e1d3942c68972b30649e5",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Corolla",
    "price": 8551,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3942c68972b30649e6",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Mercedes",
    "model": "3 Series",
    "price": 31475,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2008
  },
  {
    "_id": "671e1d3942c68972b30649e7",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "F-150",
    "price": 39221,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3942c68972b30649e8",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "Corolla",
    "price": 17600,
    "seller_id": "671e1d3742c68972b306497b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2006
  },
  {
    "_id": "671e1d3942c68972b30649e9",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Sorento",
    "price": 14492,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3942c68972b30649ea",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "F-150",
    "price": 40723,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3942c68972b30649eb",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "BMW",
    "model": "Elantra",
    "price": 19488,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3942c68972b30649ec",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "BMW",
    "model": "Altima",
    "price": 32329,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3942c68972b30649ed",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "C-Class",
    "price": 5978,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3942c68972b30649ee",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Altima",
    "price": 16167,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2001
  },
  {
    "_id": "671e1d3942c68972b30649ef",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Altima",
    "price": 22833,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2009
  },
  {
    "_id": "671e1d3942c68972b30649f0",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Altima",
    "price": 47758,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b30649f1",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 5638,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2008
  },
  {
    "_id": "671e1d3942c68972b30649f2",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Mercedes",
    "model": "3 Series",
    "price": 15307,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2010
  },
  {
    "_id": "671e1d3942c68972b30649f3",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Kia",
    "model": "Impala",
    "price": 23574,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3942c68972b30649f4",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "C-Class",
    "price": 20145,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3942c68972b30649f5",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Nissan",
    "model": "A4",
    "price": 33276,
    "seller_id": "671e1d3742c68972b306498e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3942c68972b30649f6",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "3 Series",
    "price": 49492,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2003
  },
  {
    "_id": "671e1d3942c68972b30649f7",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Civic",
    "price": 49557,
    "seller_id": "671e1d3742c68972b3064987",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2010
  },
  {
    "_id": "671e1d3942c68972b30649f8",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Mercedes",
    "model": "A4",
    "price": 43141,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3942c68972b30649f9",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "F-150",
    "price": 12255,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2019
  },
  {
    "_id": "671e1d3942c68972b30649fa",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 12652,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3942c68972b30649fb",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Kia",
    "model": "Altima",
    "price": 13475,
    "seller_id": "671e1d3742c68972b3064988",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2014
  },
  {
    "_id": "671e1d3942c68972b30649fc",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "3 Series",
    "price": 11393,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b30649fd",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "Sorento",
    "price": 44001,
    "seller_id": "671e1d3742c68972b3064988",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2002
  },
  {
    "_id": "671e1d3942c68972b30649fe",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Honda",
    "model": "C-Class",
    "price": 30419,
    "seller_id": "671e1d3742c68972b3064984",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b30649ff",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Civic",
    "price": 8980,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3942c68972b3064a00",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Chevrolet",
    "model": "F-150",
    "price": 9594,
    "seller_id": "671e1d3742c68972b3064986",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b3064a01",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Kia",
    "model": "Elantra",
    "price": 22431,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3942c68972b3064a02",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 6926,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2015
  },
  {
    "_id": "671e1d3942c68972b3064a03",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Audi",
    "model": "C-Class",
    "price": 7745,
    "seller_id": "671e1d3742c68972b306498e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3942c68972b3064a04",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Nissan",
    "model": "Civic",
    "price": 32931,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2007
  },
  {
    "_id": "671e1d3942c68972b3064a05",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 38265,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3942c68972b3064a06",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Kia",
    "model": "Elantra",
    "price": 24418,
    "seller_id": "671e1d3742c68972b3064988",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2015
  },
  {
    "_id": "671e1d3942c68972b3064a07",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "BMW",
    "model": "Sorento",
    "price": 29496,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3942c68972b3064a08",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Ford",
    "model": "Sorento",
    "price": 15722,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3942c68972b3064a09",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Nissan",
    "model": "Altima",
    "price": 9687,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3942c68972b3064a0a",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 31159,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3942c68972b3064a0b",
    "created_at": "Sun, 27 Oct 2024 11:00:09 GMT",
    "make": "BMW",
    "model": "Sorento",
    "price": 18169,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a0c",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "C-Class",
    "price": 12991,
    "seller_id": "671e1d3742c68972b3064986",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2008
  },
  {
    "_id": "671e1d3a42c68972b3064a0d",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "C-Class",
    "price": 39423,
    "seller_id": "671e1d3742c68972b306498a",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3a42c68972b3064a0e",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Ford",
    "model": "Civic",
    "price": 20273,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3a42c68972b3064a0f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Altima",
    "price": 9192,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3a42c68972b3064a10",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Hyundai",
    "model": "F-150",
    "price": 31530,
    "seller_id": "671e1d3742c68972b3064983",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3a42c68972b3064a11",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Honda",
    "model": "Elantra",
    "price": 34441,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3a42c68972b3064a12",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "Impala",
    "price": 16844,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3a42c68972b3064a13",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Ford",
    "model": "Elantra",
    "price": 10840,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a14",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 6630,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3a42c68972b3064a15",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "Civic",
    "price": 41835,
    "seller_id": "671e1d3742c68972b306498a",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2008
  },
  {
    "_id": "671e1d3a42c68972b3064a16",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "F-150",
    "price": 13630,
    "seller_id": "671e1d3742c68972b3064989",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2019
  },
  {
    "_id": "671e1d3a42c68972b3064a17",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "C-Class",
    "price": 16176,
    "seller_id": "671e1d3742c68972b3064984",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3a42c68972b3064a18",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Audi",
    "model": "Civic",
    "price": 13408,
    "seller_id": "671e1d3742c68972b306498b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3a42c68972b3064a19",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Audi",
    "model": "Civic",
    "price": 16385,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2011
  },
  {
    "_id": "671e1d3a42c68972b3064a1a",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "3 Series",
    "price": 47840,
    "seller_id": "671e1d3742c68972b3064988",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2022
  },
  {
    "_id": "671e1d3a42c68972b3064a1b",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "A4",
    "price": 33261,
    "seller_id": "671e1d3742c68972b306498a",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2009
  },
  {
    "_id": "671e1d3a42c68972b3064a1c",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Honda",
    "model": "Civic",
    "price": 15126,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2003
  },
  {
    "_id": "671e1d3a42c68972b3064a1d",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "C-Class",
    "price": 28743,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2023
  },
  {
    "_id": "671e1d3a42c68972b3064a1e",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Chevrolet",
    "model": "C-Class",
    "price": 12277,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2003
  },
  {
    "_id": "671e1d3a42c68972b3064a1f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Impala",
    "price": 18922,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a20",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Civic",
    "price": 34854,
    "seller_id": "671e1d3742c68972b306498a",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3a42c68972b3064a21",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Honda",
    "model": "3 Series",
    "price": 35819,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2023
  },
  {
    "_id": "671e1d3a42c68972b3064a22",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "Elantra",
    "price": 32603,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2006
  },
  {
    "_id": "671e1d3a42c68972b3064a23",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "Elantra",
    "price": 14212,
    "seller_id": "671e1d3742c68972b3064987",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2021
  },
  {
    "_id": "671e1d3a42c68972b3064a24",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "C-Class",
    "price": 29205,
    "seller_id": "671e1d3742c68972b306497e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a25",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Honda",
    "model": "Altima",
    "price": 47839,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2019
  },
  {
    "_id": "671e1d3a42c68972b3064a26",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "Altima",
    "price": 10533,
    "seller_id": "671e1d3742c68972b3064985",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3a42c68972b3064a27",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Civic",
    "price": 41315,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2023
  },
  {
    "_id": "671e1d3a42c68972b3064a28",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Audi",
    "model": "Altima",
    "price": 44719,
    "seller_id": "671e1d3742c68972b306497b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2014
  },
  {
    "_id": "671e1d3a42c68972b3064a29",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "C-Class",
    "price": 35874,
    "seller_id": "671e1d3742c68972b306497b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3a42c68972b3064a2a",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Elantra",
    "price": 46581,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a2b",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Ford",
    "model": "C-Class",
    "price": 11892,
    "seller_id": "671e1d3742c68972b306497f",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3a42c68972b3064a2c",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "F-150",
    "price": 38271,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2004
  },
  {
    "_id": "671e1d3a42c68972b3064a2d",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Mercedes",
    "model": "F-150",
    "price": 45395,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2006
  },
  {
    "_id": "671e1d3a42c68972b3064a2e",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Corolla",
    "price": 38688,
    "seller_id": "671e1d3742c68972b3064987",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3a42c68972b3064a2f",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "C-Class",
    "price": 31162,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2018
  },
  {
    "_id": "671e1d3a42c68972b3064a30",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Chevrolet",
    "model": "3 Series",
    "price": 24687,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2000
  },
  {
    "_id": "671e1d3a42c68972b3064a31",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "A4",
    "price": 27890,
    "seller_id": "671e1d3742c68972b306497b",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2021
  },
  {
    "_id": "671e1d3a42c68972b3064a32",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "A4",
    "price": 10700,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3a42c68972b3064a33",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "Sorento",
    "price": 48004,
    "seller_id": "671e1d3742c68972b306497d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3a42c68972b3064a34",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Hyundai",
    "model": "Impala",
    "price": 29451,
    "seller_id": "671e1d3742c68972b3064984",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2016
  },
  {
    "_id": "671e1d3a42c68972b3064a35",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "F-150",
    "price": 40313,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2010
  },
  {
    "_id": "671e1d3a42c68972b3064a36",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Kia",
    "model": "C-Class",
    "price": 8633,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2019
  },
  {
    "_id": "671e1d3a42c68972b3064a37",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "F-150",
    "price": 19628,
    "seller_id": "671e1d3742c68972b3064982",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2007
  },
  {
    "_id": "671e1d3a42c68972b3064a38",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "BMW",
    "model": "Altima",
    "price": 5392,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a39",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Nissan",
    "model": "C-Class",
    "price": 39560,
    "seller_id": "671e1d3742c68972b306498d",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2005
  },
  {
    "_id": "671e1d3a42c68972b3064a3a",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Chevrolet",
    "model": "F-150",
    "price": 43881,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2021
  },
  {
    "_id": "671e1d3a42c68972b3064a3b",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Toyota",
    "model": "A4",
    "price": 20307,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2014
  },
  {
    "_id": "671e1d3a42c68972b3064a3c",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Chevrolet",
    "model": "Sorento",
    "price": 29220,
    "seller_id": "671e1d3742c68972b306498c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e1d3a42c68972b3064a3d",
    "created_at": "Sun, 27 Oct 2024 11:00:10 GMT",
    "make": "Audi",
    "model": "Elantra",
    "price": 31649,
    "seller_id": "671e1d3742c68972b306498e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3b42c68972b3064a3e",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Kia",
    "model": "A4",
    "price": 38933,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2006
  },
  {
    "_id": "671e1d3b42c68972b3064a3f",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Toyota",
    "model": "Altima",
    "price": 17191,
    "seller_id": "671e1d3742c68972b3064980",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2013
  },
  {
    "_id": "671e1d3b42c68972b3064a40",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Honda",
    "model": "Civic",
    "price": 32955,
    "seller_id": "671e1d3742c68972b306498e",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2017
  },
  {
    "_id": "671e1d3b42c68972b3064a41",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Hyundai",
    "model": "Altima",
    "price": 23288,
    "seller_id": "671e1d3742c68972b3064981",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2012
  },
  {
    "_id": "671e1d3b42c68972b3064a42",
    "created_at": "Sun, 27 Oct 2024 11:00:11 GMT",
    "make": "Ford",
    "model": "Corolla",
    "price": 46497,
    "seller_id": "671e1d3742c68972b306497c",
    "shortlists": 0,
    "suspended": false,
    "views": 0,
    "year": 2020
  },
  {
    "_id": "671e2e318cf88c0cb7a161b7",
    "created_at": "Sun, 27 Oct 2024 12:12:33 GMT",
    "make": "Toyota",
    "model": "Camry",
    "price": 12000,
    "seller_id": "test_seller_id",
    "year": 2015
  }
]

=== Save Listing to Shortlist ===
Request URL: http://localhost:5000/api/buyer/save_listing
Request Method: POST
Request Body: {"user_id": "test_buyer_id", "listing_id": "671e1d3942c68972b30649df"}
Status Code: 200
Response: {
  "message": "Listing saved to shortlist"
}

=== View Shortlist ===
Request URL: http://localhost:5000/api/buyer/view_shortlist?user_id=test_buyer_id
Request Method: GET
Status Code: 200
Response: {
  "shortlist": [
    "671e1d3942c68972b30649df"
  ]
}

=== Rate and Review Agent ===
Request URL: http://localhost:5000/api/buyer/rate_review_agent
Request Method: POST
Request Body: {"agent_id": "test_agent_id", "rating": 5, "review": "Excellent service", "buyer_id": "test_buyer_id"}
Status Code: 500
Response: <!doctype html>
<html lang=en>
  <head>
    <title>NameError: name &#39;datetime&#39; is not defined. Did you forget to import &#39;datetime&#39;
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "1gVA30hnIBcZqZJnKVxJ";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>NameError</h1>
<div class="detail">
  <p class="errormsg">NameError: name &#39;datetime&#39; is not defined. Did you forget to import &#39;datetime&#39;
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2443168458800">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1498</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-2443168459088">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1476</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2443168459232">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py"</cite>,
      line <em class="line">194</em>,
      in <code class="function">wrapped_function</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>
<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>
<pre class="line before"><span class="ws">        </span>if options.get(&#39;intercept_exceptions&#39;, True):</pre>
<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>
<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>
<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))
<span class="ws">                    </span>                                            ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if hasattr(app, &#39;handle_exception&#39;):</pre>
<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>
<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>
</div>

<li><div class="frame" id="frame-2443168459376">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1473</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2443168459520">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">882</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2443168459664">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py"</cite>,
      line <em class="line">194</em>,
      in <code class="function">wrapped_function</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre>
<pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre>
<pre class="line before"><span class="ws">        </span>if options.get(&#39;intercept_exceptions&#39;, True):</pre>
<pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre>
<pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre>
<pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))
<span class="ws">                    </span>                                            ^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>return wrapped_function</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">            </span>if hasattr(app, &#39;handle_exception&#39;):</pre>
<pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre>
<pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div>
</div>

<li><div class="frame" id="frame-2443168459952">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">880</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2443168459808">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">865</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2443168460096">
  <h4>File <cite class="filename">"C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\controllers\buyer.py"</cite>,
      line <em class="line">78</em>,
      in <code class="function">rate_review_agent</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>review = {</pre>
<pre class="line before"><span class="ws">        </span>&#34;agent_id&#34;: data[&#39;agent_id&#39;],</pre>
<pre class="line before"><span class="ws">        </span>&#34;buyer_id&#34;: data[&#39;buyer_id&#39;],</pre>
<pre class="line before"><span class="ws">        </span>&#34;rating&#34;: data[&#39;rating&#39;],</pre>
<pre class="line before"><span class="ws">        </span>&#34;review&#34;: data.get(&#39;review&#39;, &#39;&#39;),</pre>
<pre class="line current"><span class="ws">        </span>&#34;created_at&#34;: datetime.utcnow()
<span class="ws">        </span>              ^^^^^^^^</pre>
<pre class="line after"><span class="ws">    </span>}</pre>
<pre class="line after"><span class="ws">    </span>Review.create_review(review)  # Implement this method in your Review model</pre>
<pre class="line after"><span class="ws">    </span>return jsonify({&#34;message&#34;: &#34;Review submitted successfully&#34;}), 201</pre></div>
</div>
</ul>
  <blockquote>NameError: name &#39;datetime&#39; is not defined. Did you forget to import &#39;datetime&#39;
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 1476, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py&#34;, line 194, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 1473, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py&#34;, line 194, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 880, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py&#34;, line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\controllers\buyer.py&#34;, line 78, in rate_review_agent
    &#34;created_at&#34;: datetime.utcnow()
                  ^^^^^^^^^^^^^^^^^
NameError: name &#39;datetime&#39; is not defined. Did you forget to import &#39;datetime&#39;
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 1476, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py", line 194, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask_cors\extension.py", line 194, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\venv\Lib\site-packages\flask\app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\justi\Downloads\School\CSIT314 Software Development Methodologies\used_car_system\backend\controllers\buyer.py", line 78, in rate_review_agent
    "created_at": datetime.utcnow()
                  ^^^^^^^^^^^^^^^^^
NameError: name 'datetime' is not defined. Did you forget to import 'datetime'


-->

Error parsing response JSON: Expecting value: line 1 column 1 (char 0)

=== Get Metrics ===
Request URL: http://localhost:5000/api/seller/get_metrics/671e1d3942c68972b30649df
Request Method: GET
Status Code: 200
Response: null

=== Track View ===
Request URL: http://localhost:5000/api/seller/track_view
Request Method: POST
Request Body: {"listing_id": "test_listing_id"}
Status Code: 200
Response: {
  "message": "View tracked"
}

=== Track Shortlist ===
Request URL: http://localhost:5000/api/seller/track_shortlist
Request Method: POST
Request Body: {"listing_id": "test_listing_id"}
Status Code: 200
Response: {
  "message": "Shortlist tracked"
}

=== Seller Logout ===
Request URL: http://localhost:5000/api/seller/logout
Request Method: POST
Status Code: 200
Response: {
  "message": "Logout successful"
}

