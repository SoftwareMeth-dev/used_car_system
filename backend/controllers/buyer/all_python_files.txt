

# Contents of: .\gettxt.py
import os
import shutil

def collect_python_files_to_text(folder_path=".", output_file="all_python_files.txt"):
    with open(output_file, 'a') as txt_file:  # Open in append mode
        for root, _, files in os.walk(folder_path):
            for file in files:
                if file.endswith('.py'):
                    py_file_path = os.path.join(root, file)
                    try:
                        with open(py_file_path, 'r') as py_file:
                            txt_file.write(f"\n\n# Contents of: {py_file_path}\n")
                            shutil.copyfileobj(py_file, txt_file)
                            txt_file.write("\n")  # Add newline after each file
                        print(f"Appended {py_file_path} to {output_file}")
                    except Exception as e:
                        print(f"Could not read {py_file_path}: {e}")

# Run the function from the current directory
collect_python_files_to_text()



# Contents of: .\loan_calculator.py
# backend/controllers/buyer/loan_calculator_controller.py

from flask import Blueprint, request, jsonify
from models.loan_calculator import LoanCalculatorModel

loan_calculator_bp = Blueprint('loan_calculator', __name__, url_prefix='/api/buyer')

class LoanCalculatorController:
    def __init__(self):
        self.register_routes()

    def register_routes(self):
        loan_calculator_bp.add_url_rule('/loan_calculator', view_func=self.loan_calculator, methods=['POST'])

    def loan_calculator(self):
        data = request.get_json()
        response, status_code = LoanCalculatorModel.calculate_loan(data)
        return jsonify(response), status_code

# Instantiate the controller to register routes
loan_calculator_controller = LoanCalculatorController()


# Contents of: .\save_listing.py
# backend/controllers/buyer/save_listing_controller.py

from flask import Blueprint, request, jsonify
from models.buyer_listing import BuyerListing

save_listing_bp = Blueprint('save_listing', __name__, url_prefix='/api/buyer')

class SaveListingController:
    def __init__(self):
        self.register_routes()

    def register_routes(self):
        save_listing_bp.add_url_rule('/save_listing', view_func=self.save_listing, methods=['POST'])

    def save_listing(self):
        data = request.get_json()
        response, status_code = BuyerListing.save_listing(data)
        return jsonify(response), status_code

# Instantiate the controller
save_listing_controller = SaveListingController()



# Contents of: .\search_cars.py
# backend/controllers/buyer/search_cars_controller.py

from flask import Blueprint, request, jsonify
from models.used_car_listing import UsedCarListing

search_cars_bp = Blueprint('search_cars', __name__, url_prefix='/api/buyer')

class SearchCarsController:
    def __init__(self):
        self.register_routes()

    def register_routes(self):
        search_cars_bp.add_url_rule('/search_cars', view_func=self.search_cars, methods=['GET'])

    def search_cars(self):
        query = request.args.get('query')
        response, status_code = UsedCarListing.search_cars(query)
        return jsonify(response), status_code

# Instantiate the controller
search_cars_controller = SearchCarsController()



# Contents of: .\search_shortlist.py
# backend/controllers/buyer/search_shortlist_controller.py

from flask import Blueprint, request, jsonify
from models.buyer_listing import BuyerListing

search_shortlist_bp = Blueprint('search_shortlist', __name__, url_prefix='/api/buyer')

class SearchShortlistController:
    def __init__(self):
        self.register_routes()

    def register_routes(self):
        search_shortlist_bp.add_url_rule('/search_shortlist', view_func=self.search_shortlist, methods=['GET'])

    def search_shortlist(self):
        user_id = request.args.get('user_id')
        query = request.args.get('query')
        listing_id = request.args.get('listing_id')

        data = {
            "user_id": user_id,
            "query": query,
            "listing_id": listing_id
        }

        response, status_code = BuyerListing.search_shortlist(data)
        return jsonify(response), status_code

# Instantiate the controller
search_shortlist_controller = SearchShortlistController()



# Contents of: .\view_shortlist.py
# backend/controllers/buyer/view_shortlist_controller.py

from flask import Blueprint, request, jsonify
from models.buyer_listing import BuyerListing

view_shortlist_bp = Blueprint('view_shortlist', __name__, url_prefix='/api/buyer')

class ViewShortlistController:
    def __init__(self):
        self.register_routes()

    def register_routes(self):
        view_shortlist_bp.add_url_rule('/view_shortlist', view_func=self.view_shortlist, methods=['GET'])

    def view_shortlist(self):
        user_id = request.args.get('user_id')
        response, status_code = BuyerListing.get_shortlist(user_id)
        return jsonify(response), status_code

# Instantiate the controller
view_shortlist_controller = ViewShortlistController()

